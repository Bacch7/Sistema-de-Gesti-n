import os

class Producto:
    def __init__(self, nombre, cantidad, precio):
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def __str__(self):
        return f"{self.nombre},{self.cantidad},{self.precio}"

class Inventario:
    def __init__(self, archivo='inventario.txt'):
        self.archivo = archivo
        self.productos = {}
        self.cargar_inventario()

    def cargar_inventario(self):
        """Carga los productos desde el archivo de inventario."""
        try:
            if os.path.exists(self.archivo):
                with open(self.archivo, 'r') as file:
                    for linea in file:
                        nombre, cantidad, precio = linea.strip().split(',')
                        self.productos[nombre] = Producto(nombre, int(cantidad), float(precio))
                print("Inventario cargado correctamente.")
            else:
                print("Archivo de inventario no encontrado. Se creará uno nuevo.")
                open(self.archivo, 'w').close()  # Crea el archivo si no existe
        except FileNotFoundError:
            print("Error: Archivo de inventario no encontrado.")
        except PermissionError:
            print("Error: Permiso denegado para acceder al archivo.")
        except Exception as e:
            print(f"Error inesperado al cargar el inventario: {e}")

    def guardar_inventario(self):
        """Guarda los productos en el archivo de inventario."""
        try:
            with open(self.archivo, 'w') as file:
                for producto in self.productos.values():
                    file.write(str(producto) + '\n')
            print("Inventario guardado correctamente.")
        except PermissionError:
            print("Error: Permiso denegado para escribir en el archivo.")
        except Exception as e:
            print(f"Error inesperado al guardar el inventario: {e}")

    def agregar_producto(self, nombre, cantidad, precio):
        """Agrega un nuevo producto al inventario y lo guarda en el archivo."""
        if nombre in self.productos:
            print("Error: El producto ya existe. Usa actualizar_producto para modificarlo.")
            return
        self.productos[nombre] = Producto(nombre, cantidad, precio)
        self.guardar_inventario()
        print(f"Producto '{nombre}' agregado correctamente.")

    def actualizar_producto(self, nombre, cantidad=None, precio=None):
        """Actualiza un producto existente en el inventario."""
        if nombre not in self.productos:
            print("Error: El producto no existe.")
            return
        if cantidad is not None:
            self.productos[nombre].cantidad = cantidad
        if precio is not None:
            self.productos[nombre].precio = precio
        self.guardar_inventario()
        print(f"Producto '{nombre}' actualizado correctamente.")

    def eliminar_producto(self, nombre):
        """Elimina un producto del inventario."""
        if nombre not in self.productos:
            print("Error: El producto no existe.")
            return
        del self.productos[nombre]
        self.guardar_inventario()
        print(f"Producto '{nombre}' eliminado correctamente.")

    def mostrar_inventario(self):
        """Muestra todos los productos en el inventario."""
        if not self.productos:
            print("El inventario está vacío.")
            return
        for producto in self.productos.values():
            print(producto)

# Ejemplo de uso del sistema de gestión de inventarios
if __name__ == "__main__":
    inventario = Inventario()
    inventario.mostrar_inventario()
    inventario.agregar_producto("Manzanas", 10, 0.5)
    inventario.actualizar_producto("Manzanas", 15)
    inventario.eliminar_producto("Manzanas")
